<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd ">

	
<!-- ************************************************begin************************************************* -->
    <!-- 注解扫描包 ，自动形成注入  注意：如果有重复被扫描的包，则包中的对象则被重复创建-->
    <context:component-scan base-package="com.softcreate.controller" use-default-filters="false" >
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    	<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
<!-- ************************************************end************************************************* -->    
    
<!-- ************************************************begin************************************************* -->
    <!-- 配置直接转发的页面，这样就不会经过handler的处理 -->
<!--     <mvc:view-controller path="/xxx" view-name="yyy.jsp" /> -->
<!-- ************************************************end************************************************* -->
    
    
<!-- ************************************************begin************************************************* -->
	<!--注解说明 <context:annotation-config /> -->          
	<!-- @Controller 声明Action组件 @Service 声明Service组件 @Service("myMovieLister") 
		 @Repository 声明Dao组件 @Component 泛指组件, 当不好归类时. @RequestMapping("/menu") 请求映射 
		 @Resource 用于注入，( j2ee提供的 ) 默认按名称装配，@Resource(name="beanName") 
		 @Autowired用于注入，(spring提供的) 默认按类型装配 
		 @Transactional( rollbackFor={Exception.class}) 事务管理 
		 @ResponseBody @Scope("prototype") 设定bean的作用域 
	-->
    <!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven />
<!-- ************************************************end************************************************* -->
    
    
<!-- ************************************************begin************************************************* -->
    <!-- 用于处理静态资源的请求，如：图像、JS文件、CSS文件
    	default-servlet-handler将在SpringMVC上下文中定义一个DefaultServletHttpRequestHandler，这个servlet会对进入DispacherServlet的请求进行筛查，
    	如果发现 请求 是没有经过映射的请求，就将该请求由WEB应用服务器默认的Servlet处理，否则由DispacherServlet继续处理。
    	
    	一般WEB应用服务器默认的Servlet的名称是default。
    	如果所使用的WEB应用服务器默认的Servlet的名称不是default，则需要通过default-servlet-name属性显示指定，如：<mvc:default-servlet-handler default-servlet-name="xxx"/>
     -->
<!--     <mvc:default-servlet-handler /> -->
<!-- ************************************************end************************************************* -->
    
    
<!-- ************************************************begin************************************************* -->    
    <!-- 对静态资源文件(js/image/css)的访问，即对 静态资源的映射 -->
<!--     	<mvc:resources mapping="/resources/**" location="/resources/" /> -->
<!--     <mvc:resources  location="/img/"   mapping="/img/**"   /> -->
<!--     <mvc:resources  location="/js/"    mapping="/js/**"    /> -->
<!--     <mvc:resources  location="/css/"   mapping="/css/**"   /> -->

    <!-- 配置资源国际化 -->
<!--     <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> -->
<!-- 		<property name="basename" value="i18n"></property>     -->
<!--     </bean> -->
<!-- ************************************************end************************************************* -->

    
<!-- ************************************************begin************************************************* -->
    <!-- 配置视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/" />  <!-- /表示以web根目录开始; 可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="suffix" value=".jsp"/>     <!-- 表示以.jsp为后缀的文件 -->
	</bean> 
<!-- ************************************************end************************************************* -->
  
    
<!-- ************************************************begin************************************************* -->
    <!-- 文件上传解析器 -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1024000"/>	<!-- 最大上传文件的尺寸（单位：字节）, -1表示不限制 -->
        <property name="uploadTempDir" value="upload/tempfile"/> <!-- 上传文件的临时路径 -->
        <property name="defaultEncoding" value="UTF-8"/>  <!-- 请求编码格式，这个必须与jsp页面中的pageEncoding属性一样 -->
    </bean>
<!-- ************************************************end************************************************* -->
    
    <!-- 如果当前请求为“/”时，则转发到“/index” -->
    <mvc:view-controller path="/" view-name="forward:/index.jsp"/> 
    
    
</beans>